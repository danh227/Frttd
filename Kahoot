// ==UserScript==
// @name         Kahoot Auto Answer + Add Question UI
// @namespace    http://tampermonkey.net/
// @version      2.0
// @description  T·ª± ƒë·ªông ch·ªçn ƒë√°p √°n ƒë√∫ng v√† cho ph√©p th√™m c√¢u h·ªèi ngay trong trang Kahoot! üöÄüáªüá≥
// @author       You
// @match        https://kahoot.it/*
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const localKey = 'kahootAnswerDB';

    let answerDB = JSON.parse(localStorage.getItem(localKey)) || {
        "Ch√°y l√† g√¨?": "Ph·∫£n ·ª©ng oxi h√≥a t·∫°o ra l·ª≠a",
        "D·∫≠p t·∫Øt ch√°y b·∫±ng c√°ch n√†o?": "C·∫Øt ngu·ªìn nhi·ªát"
    };

    const saveDB = () => {
        localStorage.setItem(localKey, JSON.stringify(answerDB));
    };

    const blinkStyle = `
        @keyframes blink {
            0% { background-color: yellow; }
            50% { background-color: red; }
            100% { background-color: yellow; }
        }
        .blinking {
            animation: blink 0.6s infinite;
        }
        #add-question-btn {
            position: fixed;
            top: 10px;
            left: 10px;
            z-index: 9999;
            padding: 8px 12px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            font-weight: bold;
            cursor: pointer;
        }
        #question-form {
            position: fixed;
            top: 50px;
            left: 10px;
            z-index: 9999;
            background: white;
            border: 2px solid #ccc;
            padding: 10px;
            border-radius: 5px;
            display: none;
            font-family: Arial;
        }
        #question-form input {
            width: 250px;
            margin-bottom: 8px;
        }
    `;

    const styleSheet = document.createElement("style");
    styleSheet.innerText = blinkStyle;
    document.head.appendChild(styleSheet);

    // Button UI
    const addBtn = document.createElement("button");
    addBtn.id = "add-question-btn";
    addBtn.textContent = "‚ûï Th√™m c√¢u h·ªèi";
    document.body.appendChild(addBtn);

    const form = document.createElement("div");
    form.id = "question-form";
    form.innerHTML = `
        <label>C√¢u h·ªèi:<br><input id="new-question" type="text"></label><br>
        <label>ƒê√°p √°n ƒë√∫ng:<br><input id="new-answer" type="text"></label><br>
        <button id="save-question">üíæ L∆∞u</button>
    `;
    document.body.appendChild(form);

    addBtn.onclick = () => {
        form.style.display = form.style.display === 'none' ? 'block' : 'none';
    };

    document.getElementById("save-question").onclick = () => {
        const q = document.getElementById("new-question").value.trim();
        const a = document.getElementById("new-answer").value.trim();
        if (q && a) {
            answerDB[q] = a;
            saveDB();
            alert("‚úÖ ƒê√£ th√™m!");
            document.getElementById("new-question").value = "";
            document.getElementById("new-answer").value = "";
            form.style.display = "none";
        }
    };

    function normalize(text) {
        return text.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "").trim();
    }

    let lastQuestion = "";

    function checkAndClickAnswer() {
        const questionEl = document.querySelector('[data-functional-selector="question-text"]');
        const answerEls = document.querySelectorAll('[data-functional-selector="answer-text"]');

        if (!questionEl || answerEls.length === 0) {
            requestAnimationFrame(checkAndClickAnswer);
            return;
        }

        const rawQuestion = questionEl.textContent.trim();
        if (rawQuestion === lastQuestion) {
            requestAnimationFrame(checkAndClickAnswer);
            return;
        }

        lastQuestion = rawQuestion;

        const correctAnswer = answerDB[rawQuestion];
        if (!correctAnswer) {
            requestAnimationFrame(checkAndClickAnswer);
            return;
        }

        let clicked = false;

        answerEls.forEach(el => {
            const answerText = el.textContent.trim();
            if (normalize(answerText).includes(normalize(correctAnswer))) {
                const button = el.closest('button');
                if (button) {
                    button.classList.add('blinking');
                    if (!clicked) {
                        button.click();
                        clicked = true;
                    }
                }
            }
        });

        requestAnimationFrame(checkAndClickAnswer);
    }

    requestAnimationFrame(checkAndClickAnswer);
})();